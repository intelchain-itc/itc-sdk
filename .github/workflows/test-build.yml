name: test build

on:
  push:

env:
  GOPATH: ${{ github.workspace }}
  GOBIN: ${{ github.workspace }}/bin

jobs:
  build-x86_64:
    name: Build itc binary for x86_64
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-22.04, macos-latest ]

    steps:
      - name: Checkout itc code
        uses: actions/checkout@v4
        with:
          path: itc-sdk

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: itc-sdk/go.mod
          
      - name: Wait for setup to finish
        run: sleep 5

      - name: Checkout dependence repo
        uses: actions/checkout@v4
        with:
          repository: intelchain-itc/mcl
          token: ${{ secrets.GH_PAT }}
          path: ${{ github.workspace }}/src/github.com/intelchain-itc/mcl

      - name: Checkout dependence repo
        uses: actions/checkout@v4
        with:
          repository: intelchain-itc/bls
          token: ${{ secrets.GH_PAT }}
          path: ${{ github.workspace }}/src/github.com/intelchain-itc/bls

      - name: Checkout dependence code
        uses: actions/checkout@v4
        with:
          repository: intelchain-itc/intelchain
          token: ${{ secrets.GH_PAT }}
          ref: dev
          path: ${{ github.workspace }}/src/github.com/intelchain-itc/intelchain
          # ref: main
          # fetch-depth: 0
          

      - name: Get latest version and release
        run: |
          VERSION=$(git tag -l --sort=-v:refname | head -n 1 | tr -d v)
          RELEASE=$(git describe --long | cut -f2 -d-)
          echo "build_version=$VERSION" >> $GITHUB_ENV
          echo "build_release=$RELEASE" >> $GITHUB_ENV
        working-directory: itc-sdk

      - name: Debug
        run: |
          pwd
          echo ${HOME}
          echo ${GITHUB_WORKSPACE}
          echo ${GOPATH}
          echo ${GOROOT}
          ls ${{ github.workspace }}/src/github.com/intelchain-itc/
          
      # - name: Check OpenSSL version
      #   run: |
      #    openssl version -a

      # - name: Install Dependencies (Ubuntu)
      #   if: matrix.os == 'ubuntu-22.04'
      #   run: |
      #       sudo apt-get update
      #       sudo apt-get install -y openssl libssl-dev
      #       openssl version
      - name: Check OpenSSL version
        run: |
         openssl version -a

      - name: Install Dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          # Uninstall OpenSSL version 3 if installed
          sudo apt-get remove --purge -y openssl libssl-dev || true

          # Install OpenSSL version 1.1
          sudo apt-get update
          sudo apt-get install -y openssl=1.1* libssl-dev=1.1*
          
          # Verify OpenSSL version
          openssl version

      - name: Build itc binary for linux ubuntu
        if: matrix.os == 'ubuntu-22.04'
        run: |
          make static
        working-directory: itc-sdk

      - name: Build libs for macos-latest
        if: matrix.os == 'macos-latest'
        run: |
          brew install gmp
          # brew install openssl@3
          # sudo mkdir -p /opt/homebrew/opt/
          # sudo ln -sf /usr/local/opt/openssl@3 /opt/homebrew/opt/openssl@3
          # echo "ls -l /opt/homebrew/opt/openssl@3"; ls -l /opt/homebrew/opt/openssl@3

          # Uninstall OpenSSL version 3 if installed
          brew uninstall openssl@3 || true
          brew install openssl@1.1
          sudo mkdir -p /opt/homebrew/opt/
          sudo ln -sf /usr/local/opt/openssl@1.1 /opt/homebrew/opt/openssl@1.1
          echo "ls -l /opt/homebrew/opt/openssl@1.1"; ls -l /opt/homebrew/opt/openssl@1.1
          
          make libs
        working-directory: ${{ github.workspace }}/src/github.com/intelchain-itc/intelchain

      - name: Build itc binary for macos-latest x86_64
        if: matrix.os == 'macos-latest'
        run: |
           make all
         
        working-directory: itc-sdk

      - name: Upload artifact for linux
        uses: actions/upload-artifact@v4
        if: matrix.os == 'ubuntu-22.04'
        with:
          name: itc-linux
          path: ${{ github.workspace }}/itc-sdk/dist/*
          retention-days: 1

      - name: Upload artifact for darwin
        uses: actions/upload-artifact@v4
        if: matrix.os == 'macos-latest'
        with:
          name: itc-darwin
          path: ${{ github.workspace }}/itc-sdk/dist/*
          retention-days: 1
